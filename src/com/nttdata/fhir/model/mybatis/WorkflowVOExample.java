package com.nttdata.fhir.model.mybatis;

import java.util.ArrayList;
import java.util.List;
import java.util.Date;
import java.util.Iterator;

public class WorkflowVOExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public WorkflowVOExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("workflow.id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("workflow.id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("workflow.id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("workflow.id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("workflow.id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("workflow.id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("workflow.id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("workflow.id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("workflow.id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("workflow.id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("workflow.id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("workflow.id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andMappingIdIsNull() {
			addCriterion("workflow.mappingId is null");
			return (Criteria) this;
		}

		public Criteria andMappingIdIsNotNull() {
			addCriterion("workflow.mappingId is not null");
			return (Criteria) this;
		}

		public Criteria andMappingIdEqualTo(String value) {
			addCriterion("workflow.mappingId =", value, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdNotEqualTo(String value) {
			addCriterion("workflow.mappingId <>", value, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdGreaterThan(String value) {
			addCriterion("workflow.mappingId >", value, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdGreaterThanOrEqualTo(String value) {
			addCriterion("workflow.mappingId >=", value, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdLessThan(String value) {
			addCriterion("workflow.mappingId <", value, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdLessThanOrEqualTo(String value) {
			addCriterion("workflow.mappingId <=", value, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdLike(String value) {
			addCriterion("workflow.mappingId like", value, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdNotLike(String value) {
			addCriterion("workflow.mappingId not like", value, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdIn(List<String> values) {
			addCriterion("workflow.mappingId in", values, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdNotIn(List<String> values) {
			addCriterion("workflow.mappingId not in", values, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdBetween(String value1, String value2) {
			addCriterion("workflow.mappingId between", value1, value2, "mappingId");
			return (Criteria) this;
		}

		public Criteria andMappingIdNotBetween(String value1, String value2) {
			addCriterion("workflow.mappingId not between", value1, value2, "mappingId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdIsNull() {
			addCriterion("workflow.workflowStatusId is null");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdIsNotNull() {
			addCriterion("workflow.workflowStatusId is not null");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdEqualTo(Integer value) {
			addCriterion("workflow.workflowStatusId =", value, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdNotEqualTo(Integer value) {
			addCriterion("workflow.workflowStatusId <>", value, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdGreaterThan(Integer value) {
			addCriterion("workflow.workflowStatusId >", value, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("workflow.workflowStatusId >=", value, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdLessThan(Integer value) {
			addCriterion("workflow.workflowStatusId <", value, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdLessThanOrEqualTo(Integer value) {
			addCriterion("workflow.workflowStatusId <=", value, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdIn(List<Integer> values) {
			addCriterion("workflow.workflowStatusId in", values, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdNotIn(List<Integer> values) {
			addCriterion("workflow.workflowStatusId not in", values, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdBetween(Integer value1, Integer value2) {
			addCriterion("workflow.workflowStatusId between", value1, value2, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andWorkflowStatusIdNotBetween(Integer value1, Integer value2) {
			addCriterion("workflow.workflowStatusId not between", value1, value2, "workflowStatusId");
			return (Criteria) this;
		}

		public Criteria andStartDateIsNull() {
			addCriterion("workflow.startDate is null");
			return (Criteria) this;
		}

		public Criteria andStartDateIsNotNull() {
			addCriterion("workflow.startDate is not null");
			return (Criteria) this;
		}

		public Criteria andStartDateEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.startDate =", value, "startDate");
			return (Criteria) this;
		}

		public Criteria andStartDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.startDate <>", value, "startDate");
			return (Criteria) this;
		}

		public Criteria andStartDateGreaterThan(Date value) {
			addCriterionForJDBCDate("workflow.startDate >", value, "startDate");
			return (Criteria) this;
		}

		public Criteria andStartDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.startDate >=", value, "startDate");
			return (Criteria) this;
		}

		public Criteria andStartDateLessThan(Date value) {
			addCriterionForJDBCDate("workflow.startDate <", value, "startDate");
			return (Criteria) this;
		}

		public Criteria andStartDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.startDate <=", value, "startDate");
			return (Criteria) this;
		}

		public Criteria andStartDateIn(List<Date> values) {
			addCriterionForJDBCDate("workflow.startDate in", values, "startDate");
			return (Criteria) this;
		}

		public Criteria andStartDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("workflow.startDate not in", values, "startDate");
			return (Criteria) this;
		}

		public Criteria andStartDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("workflow.startDate between", value1, value2, "startDate");
			return (Criteria) this;
		}

		public Criteria andStartDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("workflow.startDate not between", value1, value2, "startDate");
			return (Criteria) this;
		}

		public Criteria andEndDateIsNull() {
			addCriterion("workflow.endDate is null");
			return (Criteria) this;
		}

		public Criteria andEndDateIsNotNull() {
			addCriterion("workflow.endDate is not null");
			return (Criteria) this;
		}

		public Criteria andEndDateEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.endDate =", value, "endDate");
			return (Criteria) this;
		}

		public Criteria andEndDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.endDate <>", value, "endDate");
			return (Criteria) this;
		}

		public Criteria andEndDateGreaterThan(Date value) {
			addCriterionForJDBCDate("workflow.endDate >", value, "endDate");
			return (Criteria) this;
		}

		public Criteria andEndDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.endDate >=", value, "endDate");
			return (Criteria) this;
		}

		public Criteria andEndDateLessThan(Date value) {
			addCriterionForJDBCDate("workflow.endDate <", value, "endDate");
			return (Criteria) this;
		}

		public Criteria andEndDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.endDate <=", value, "endDate");
			return (Criteria) this;
		}

		public Criteria andEndDateIn(List<Date> values) {
			addCriterionForJDBCDate("workflow.endDate in", values, "endDate");
			return (Criteria) this;
		}

		public Criteria andEndDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("workflow.endDate not in", values, "endDate");
			return (Criteria) this;
		}

		public Criteria andEndDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("workflow.endDate between", value1, value2, "endDate");
			return (Criteria) this;
		}

		public Criteria andEndDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("workflow.endDate not between", value1, value2, "endDate");
			return (Criteria) this;
		}

		public Criteria andCreatedByIsNull() {
			addCriterion("workflow.createdBy is null");
			return (Criteria) this;
		}

		public Criteria andCreatedByIsNotNull() {
			addCriterion("workflow.createdBy is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedByEqualTo(String value) {
			addCriterion("workflow.createdBy =", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByNotEqualTo(String value) {
			addCriterion("workflow.createdBy <>", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByGreaterThan(String value) {
			addCriterion("workflow.createdBy >", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByGreaterThanOrEqualTo(String value) {
			addCriterion("workflow.createdBy >=", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByLessThan(String value) {
			addCriterion("workflow.createdBy <", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByLessThanOrEqualTo(String value) {
			addCriterion("workflow.createdBy <=", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByLike(String value) {
			addCriterion("workflow.createdBy like", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByNotLike(String value) {
			addCriterion("workflow.createdBy not like", value, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByIn(List<String> values) {
			addCriterion("workflow.createdBy in", values, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByNotIn(List<String> values) {
			addCriterion("workflow.createdBy not in", values, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByBetween(String value1, String value2) {
			addCriterion("workflow.createdBy between", value1, value2, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedByNotBetween(String value1, String value2) {
			addCriterion("workflow.createdBy not between", value1, value2, "createdBy");
			return (Criteria) this;
		}

		public Criteria andCreatedOnIsNull() {
			addCriterion("workflow.createdOn is null");
			return (Criteria) this;
		}

		public Criteria andCreatedOnIsNotNull() {
			addCriterion("workflow.createdOn is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedOnEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.createdOn =", value, "createdOn");
			return (Criteria) this;
		}

		public Criteria andCreatedOnNotEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.createdOn <>", value, "createdOn");
			return (Criteria) this;
		}

		public Criteria andCreatedOnGreaterThan(Date value) {
			addCriterionForJDBCDate("workflow.createdOn >", value, "createdOn");
			return (Criteria) this;
		}

		public Criteria andCreatedOnGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.createdOn >=", value, "createdOn");
			return (Criteria) this;
		}

		public Criteria andCreatedOnLessThan(Date value) {
			addCriterionForJDBCDate("workflow.createdOn <", value, "createdOn");
			return (Criteria) this;
		}

		public Criteria andCreatedOnLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.createdOn <=", value, "createdOn");
			return (Criteria) this;
		}

		public Criteria andCreatedOnIn(List<Date> values) {
			addCriterionForJDBCDate("workflow.createdOn in", values, "createdOn");
			return (Criteria) this;
		}

		public Criteria andCreatedOnNotIn(List<Date> values) {
			addCriterionForJDBCDate("workflow.createdOn not in", values, "createdOn");
			return (Criteria) this;
		}

		public Criteria andCreatedOnBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("workflow.createdOn between", value1, value2, "createdOn");
			return (Criteria) this;
		}

		public Criteria andCreatedOnNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("workflow.createdOn not between", value1, value2, "createdOn");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdIsNull() {
			addCriterion("workflow.assignedToRoleId is null");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdIsNotNull() {
			addCriterion("workflow.assignedToRoleId is not null");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdEqualTo(Integer value) {
			addCriterion("workflow.assignedToRoleId =", value, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdNotEqualTo(Integer value) {
			addCriterion("workflow.assignedToRoleId <>", value, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdGreaterThan(Integer value) {
			addCriterion("workflow.assignedToRoleId >", value, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("workflow.assignedToRoleId >=", value, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdLessThan(Integer value) {
			addCriterion("workflow.assignedToRoleId <", value, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdLessThanOrEqualTo(Integer value) {
			addCriterion("workflow.assignedToRoleId <=", value, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdIn(List<Integer> values) {
			addCriterion("workflow.assignedToRoleId in", values, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdNotIn(List<Integer> values) {
			addCriterion("workflow.assignedToRoleId not in", values, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdBetween(Integer value1, Integer value2) {
			addCriterion("workflow.assignedToRoleId between", value1, value2, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andAssignedToRoleIdNotBetween(Integer value1, Integer value2) {
			addCriterion("workflow.assignedToRoleId not between", value1, value2, "assignedToRoleId");
			return (Criteria) this;
		}

		public Criteria andNotesIsNull() {
			addCriterion("workflow.notes is null");
			return (Criteria) this;
		}

		public Criteria andNotesIsNotNull() {
			addCriterion("workflow.notes is not null");
			return (Criteria) this;
		}

		public Criteria andNotesEqualTo(String value) {
			addCriterion("workflow.notes =", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotEqualTo(String value) {
			addCriterion("workflow.notes <>", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThan(String value) {
			addCriterion("workflow.notes >", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThanOrEqualTo(String value) {
			addCriterion("workflow.notes >=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThan(String value) {
			addCriterion("workflow.notes <", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThanOrEqualTo(String value) {
			addCriterion("workflow.notes <=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLike(String value) {
			addCriterion("workflow.notes like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotLike(String value) {
			addCriterion("workflow.notes not like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesIn(List<String> values) {
			addCriterion("workflow.notes in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotIn(List<String> values) {
			addCriterion("workflow.notes not in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesBetween(String value1, String value2) {
			addCriterion("workflow.notes between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotBetween(String value1, String value2) {
			addCriterion("workflow.notes not between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andModifiedByIsNull() {
			addCriterion("workflow.modifiedBy is null");
			return (Criteria) this;
		}

		public Criteria andModifiedByIsNotNull() {
			addCriterion("workflow.modifiedBy is not null");
			return (Criteria) this;
		}

		public Criteria andModifiedByEqualTo(String value) {
			addCriterion("workflow.modifiedBy =", value, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByNotEqualTo(String value) {
			addCriterion("workflow.modifiedBy <>", value, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByGreaterThan(String value) {
			addCriterion("workflow.modifiedBy >", value, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByGreaterThanOrEqualTo(String value) {
			addCriterion("workflow.modifiedBy >=", value, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByLessThan(String value) {
			addCriterion("workflow.modifiedBy <", value, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByLessThanOrEqualTo(String value) {
			addCriterion("workflow.modifiedBy <=", value, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByLike(String value) {
			addCriterion("workflow.modifiedBy like", value, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByNotLike(String value) {
			addCriterion("workflow.modifiedBy not like", value, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByIn(List<String> values) {
			addCriterion("workflow.modifiedBy in", values, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByNotIn(List<String> values) {
			addCriterion("workflow.modifiedBy not in", values, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByBetween(String value1, String value2) {
			addCriterion("workflow.modifiedBy between", value1, value2, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedByNotBetween(String value1, String value2) {
			addCriterion("workflow.modifiedBy not between", value1, value2, "modifiedBy");
			return (Criteria) this;
		}

		public Criteria andModifiedOnIsNull() {
			addCriterion("workflow.modifiedOn is null");
			return (Criteria) this;
		}

		public Criteria andModifiedOnIsNotNull() {
			addCriterion("workflow.modifiedOn is not null");
			return (Criteria) this;
		}

		public Criteria andModifiedOnEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.modifiedOn =", value, "modifiedOn");
			return (Criteria) this;
		}

		public Criteria andModifiedOnNotEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.modifiedOn <>", value, "modifiedOn");
			return (Criteria) this;
		}

		public Criteria andModifiedOnGreaterThan(Date value) {
			addCriterionForJDBCDate("workflow.modifiedOn >", value, "modifiedOn");
			return (Criteria) this;
		}

		public Criteria andModifiedOnGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.modifiedOn >=", value, "modifiedOn");
			return (Criteria) this;
		}

		public Criteria andModifiedOnLessThan(Date value) {
			addCriterionForJDBCDate("workflow.modifiedOn <", value, "modifiedOn");
			return (Criteria) this;
		}

		public Criteria andModifiedOnLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("workflow.modifiedOn <=", value, "modifiedOn");
			return (Criteria) this;
		}

		public Criteria andModifiedOnIn(List<Date> values) {
			addCriterionForJDBCDate("workflow.modifiedOn in", values, "modifiedOn");
			return (Criteria) this;
		}

		public Criteria andModifiedOnNotIn(List<Date> values) {
			addCriterionForJDBCDate("workflow.modifiedOn not in", values, "modifiedOn");
			return (Criteria) this;
		}

		public Criteria andModifiedOnBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("workflow.modifiedOn between", value1, value2, "modifiedOn");
			return (Criteria) this;
		}

		public Criteria andModifiedOnNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("workflow.modifiedOn not between", value1, value2, "modifiedOn");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table workflow
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table workflow
     *
     * @mbg.generated do_not_delete_during_merge Wed Feb 28 16:53:30 IST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}