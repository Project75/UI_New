package com.nttdata.fhir.model.mybatis;

import java.util.ArrayList;
import java.util.List;

public class AppUserVOExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public AppUserVOExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("appUser.id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("appUser.id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("appUser.id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("appUser.id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("appUser.id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("appUser.id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("appUser.id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("appUser.id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("appUser.id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("appUser.id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("appUser.id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("appUser.id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("appUser.username is null");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("appUser.username is not null");
			return (Criteria) this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("appUser.username =", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("appUser.username <>", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("appUser.username >", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("appUser.username >=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("appUser.username <", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("appUser.username <=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("appUser.username like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("appUser.username not like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameIn(List<String> values) {
			addCriterion("appUser.username in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotIn(List<String> values) {
			addCriterion("appUser.username not in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("appUser.username between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("appUser.username not between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andFirstNameIsNull() {
			addCriterion("appUser.firstName is null");
			return (Criteria) this;
		}

		public Criteria andFirstNameIsNotNull() {
			addCriterion("appUser.firstName is not null");
			return (Criteria) this;
		}

		public Criteria andFirstNameEqualTo(String value) {
			addCriterion("appUser.firstName =", value, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameNotEqualTo(String value) {
			addCriterion("appUser.firstName <>", value, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameGreaterThan(String value) {
			addCriterion("appUser.firstName >", value, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameGreaterThanOrEqualTo(String value) {
			addCriterion("appUser.firstName >=", value, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameLessThan(String value) {
			addCriterion("appUser.firstName <", value, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameLessThanOrEqualTo(String value) {
			addCriterion("appUser.firstName <=", value, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameLike(String value) {
			addCriterion("appUser.firstName like", value, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameNotLike(String value) {
			addCriterion("appUser.firstName not like", value, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameIn(List<String> values) {
			addCriterion("appUser.firstName in", values, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameNotIn(List<String> values) {
			addCriterion("appUser.firstName not in", values, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameBetween(String value1, String value2) {
			addCriterion("appUser.firstName between", value1, value2, "firstName");
			return (Criteria) this;
		}

		public Criteria andFirstNameNotBetween(String value1, String value2) {
			addCriterion("appUser.firstName not between", value1, value2, "firstName");
			return (Criteria) this;
		}

		public Criteria andLastNameIsNull() {
			addCriterion("appUser.lastName is null");
			return (Criteria) this;
		}

		public Criteria andLastNameIsNotNull() {
			addCriterion("appUser.lastName is not null");
			return (Criteria) this;
		}

		public Criteria andLastNameEqualTo(String value) {
			addCriterion("appUser.lastName =", value, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameNotEqualTo(String value) {
			addCriterion("appUser.lastName <>", value, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameGreaterThan(String value) {
			addCriterion("appUser.lastName >", value, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameGreaterThanOrEqualTo(String value) {
			addCriterion("appUser.lastName >=", value, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameLessThan(String value) {
			addCriterion("appUser.lastName <", value, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameLessThanOrEqualTo(String value) {
			addCriterion("appUser.lastName <=", value, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameLike(String value) {
			addCriterion("appUser.lastName like", value, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameNotLike(String value) {
			addCriterion("appUser.lastName not like", value, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameIn(List<String> values) {
			addCriterion("appUser.lastName in", values, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameNotIn(List<String> values) {
			addCriterion("appUser.lastName not in", values, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameBetween(String value1, String value2) {
			addCriterion("appUser.lastName between", value1, value2, "lastName");
			return (Criteria) this;
		}

		public Criteria andLastNameNotBetween(String value1, String value2) {
			addCriterion("appUser.lastName not between", value1, value2, "lastName");
			return (Criteria) this;
		}

		public Criteria andEmailIsNull() {
			addCriterion("appUser.email is null");
			return (Criteria) this;
		}

		public Criteria andEmailIsNotNull() {
			addCriterion("appUser.email is not null");
			return (Criteria) this;
		}

		public Criteria andEmailEqualTo(String value) {
			addCriterion("appUser.email =", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotEqualTo(String value) {
			addCriterion("appUser.email <>", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThan(String value) {
			addCriterion("appUser.email >", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailGreaterThanOrEqualTo(String value) {
			addCriterion("appUser.email >=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThan(String value) {
			addCriterion("appUser.email <", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLessThanOrEqualTo(String value) {
			addCriterion("appUser.email <=", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailLike(String value) {
			addCriterion("appUser.email like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotLike(String value) {
			addCriterion("appUser.email not like", value, "email");
			return (Criteria) this;
		}

		public Criteria andEmailIn(List<String> values) {
			addCriterion("appUser.email in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotIn(List<String> values) {
			addCriterion("appUser.email not in", values, "email");
			return (Criteria) this;
		}

		public Criteria andEmailBetween(String value1, String value2) {
			addCriterion("appUser.email between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andEmailNotBetween(String value1, String value2) {
			addCriterion("appUser.email not between", value1, value2, "email");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("appUser.password is null");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("appUser.password is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordEqualTo(String value) {
			addCriterion("appUser.password =", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotEqualTo(String value) {
			addCriterion("appUser.password <>", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThan(String value) {
			addCriterion("appUser.password >", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("appUser.password >=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThan(String value) {
			addCriterion("appUser.password <", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThanOrEqualTo(String value) {
			addCriterion("appUser.password <=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLike(String value) {
			addCriterion("appUser.password like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotLike(String value) {
			addCriterion("appUser.password not like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordIn(List<String> values) {
			addCriterion("appUser.password in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotIn(List<String> values) {
			addCriterion("appUser.password not in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordBetween(String value1, String value2) {
			addCriterion("appUser.password between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotBetween(String value1, String value2) {
			addCriterion("appUser.password not between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andIsActiveIsNull() {
			addCriterion("appUser.isActive is null");
			return (Criteria) this;
		}

		public Criteria andIsActiveIsNotNull() {
			addCriterion("appUser.isActive is not null");
			return (Criteria) this;
		}

		public Criteria andIsActiveEqualTo(Boolean value) {
			addCriterion("appUser.isActive =", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveNotEqualTo(Boolean value) {
			addCriterion("appUser.isActive <>", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveGreaterThan(Boolean value) {
			addCriterion("appUser.isActive >", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveGreaterThanOrEqualTo(Boolean value) {
			addCriterion("appUser.isActive >=", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveLessThan(Boolean value) {
			addCriterion("appUser.isActive <", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveLessThanOrEqualTo(Boolean value) {
			addCriterion("appUser.isActive <=", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveIn(List<Boolean> values) {
			addCriterion("appUser.isActive in", values, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveNotIn(List<Boolean> values) {
			addCriterion("appUser.isActive not in", values, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveBetween(Boolean value1, Boolean value2) {
			addCriterion("appUser.isActive between", value1, value2, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveNotBetween(Boolean value1, Boolean value2) {
			addCriterion("appUser.isActive not between", value1, value2, "isActive");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table appuser
	 * @mbg.generated  Tue Mar 06 15:17:26 IST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table appuser
     *
     * @mbg.generated do_not_delete_during_merge Thu Jan 18 15:55:27 IST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}